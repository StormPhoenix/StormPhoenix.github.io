---
layout: post
title:    "Spring原理的初步探讨（二）"
date:    2017-06-25 00:43:19 +0800
categories:    Spring
comments: true
---

* content
{:toc}

Spring的基本原理就是通过反射解析类及其各类的各种信息，包括构造器、方法及其参数，属性。然后将其封装成bean定义信息类、constructor信息类、method信息类、property信息类，最终放到一个map里面，也就是所谓的container。

当写好配置文件，启动项目后，框架会先感召配置文件找到需要扫描的包，然后解析包里面所有的类，找到所有的含有@Bean、@Service、@Component等注解的类，然后利用反射解析他们，包括解析构造器，方法，属性等等，然后封装成各种信息类放到一个map里面。每当需要一个bean的时候，框架就会重container找到是否有这个类的定义？如果有就通过构造器new出来（这就是控制反转，不需要程序员自己去new，而是Spring框架自己负责new），然后再找到这个类是不是有需要注入的地方，比如@Autowired注解，这个注解用来将某个bean注入（这个就是依赖注入）。

如果bean的scope是singleton，则会重用这个bean而不用重新创建，而是将这个bean放到一个map里，每次用都从这个map里面找。如果scope是session，则该bean会放到session里面。仅此而已，没必要花更多精力。建议还是多看看底层的知识。
