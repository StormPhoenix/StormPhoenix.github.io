---
layout: post
title:    "Linux内核完全剖析（一）"
description: 微型计算机组成结构
date:    2017-07-08 21:04:41 +0800
categories:    Linux内核剖析 | blog
comments: true
tag: Linux内核
---

重新看了Linux内核完全剖析的第二章，记录几个关键的概念。


I/0端口寻址
==
CPU为了访问I/O接口控制器上的数据，首先需要知道它们的地址。这种地址就是I/O端口地址。I/O端口的编址分为两种：统一编址和独立编址。

* 统一端口编址
	把I/O控制器的端口地址归入存储器的寻址空间，这种方式也叫存储器映射编址。CPU访问一个I/O控制器就好比访问一个内存地址空间。
* I/O端口独立编址
	I/O控制器的端口地址作为一个独立的地址空间，称之为I/O地址空间。每一个端口都和一个I/O地址对应，访问I/O地址的时候需要专门的I/O指令。

I/O访问控制
==
* 程序循环查询
	程序读取I/O端口数据时，是由CPU循环对I/O控制器的状态进行判断，判断是否可以读取数据。这种方式特别耗费CPU时间片。

* 终端处理方式
	I/O控制器有数据时，通过终端向CPU发起请求。CPU响应中断暂停当前执行的程序，转而去处理I/O控制器，处理完毕后再返回处理暂停执行的程序。

* DMA传输方式
	DMA —— Direct Memory Access —— 用于I/O设备和系统内存进行的批量数据传输，此过程不需要CPU的参与，操作效率很高

主存储器（内存）
==
主要讨论主存储器（内存）中的数据分布。

早期的PC系统的主存储器大小很小，CPU只有20根地址线，内存最大只有1024KB（1MB）。目前的计算机内存变大了（此处讨论4G大小），为了以前PC在软件上兼容，内存在1MB以下的物理地址空间的使用分配上依然和以前一样。只不过由于BIOS处于CPU能够寻址空间的最高端，原本1MB处的BIOS的位置被用作BIOS的影子（shadow）区域，运行时4GB处的BIOS的代码会被复制到这个地方。

![内存管理](/images/internal_storage_struct.jpg)

计算机启动初始化的时候，4G空间中的640KB~1MB和4GB处的最后64KB以外的空间用作系统的内存。

在Linux 0.1中，0~640KB用作系统内核代码和数据区域。640KB ~ 1MB用于I/0设备端口的映射，其中640KB~1MB空间用作BIOS影子区域和I/0端口映射的地址。BIOS影子区域位于最后的64KB处，运行时会将4GB地址最高端的BIOS复制到这个地方。4GB处的64KB用作存储实际的BIOS代码。1MB~16MB用作系统内核分配的主内存区。

具体运行的时候，CPU会设置CS寄存器为0xF000，这样段基址就是0xFFFF0000，同时段长度被设置为64KB，也就是4GB空间的最后64KB处，也就是BIOS所在的地方，然后设置IP寄存器为0XFFF0，这样CS:IP指针就指向了0xFFFFFFF0处。BIOS在这个地方设置了一个跳转指令，跳到BIOS的某一个地方去执行。因为段长度是64KB，为了访问整个4GB空间，CPU会使用32位访问方式将数据段寄存器的访问范围设置为4GB。

然后BIOS经过了一系列的硬件初始化工作之后，就会把BIOS复制到1MB空间处，也就是前文所说的BIOS影子区域，然后跳到这个地方开始运行。最后BIOS会从设备中将操作系统引导程序加载到0x7c00处的地方（31KB）开始执行系统引导程序。

CMOS存储器
==

CMOS存储器用来存储计算机的实时时钟信息和相关硬件配置信息，其地址空间位于主存地址空间之外，访问时需要使用I/O指令。

异步串行通信和同步串行通信的区别
==

串行通信就是计算机和计算机/设备之间的信息交互，信息的和格式可以拿计算机网络中学过的帧来类比。异步和同步的区别就是传输数据时的帧的长度不一样。其中异步通信时传输是以一个字符或者一个通信单位作为一帧，而同步通信在传输时是以多个字符或字节流作为一个帧。
