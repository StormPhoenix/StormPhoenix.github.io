---
layout: post
title:    "Linux账号管理"
date:    2017-06-10 13:05:30 +0800
categories:    Linux
comments:    true
---

* content
{:toc}

## **用户标识符UID与GID**
* uid：用户的的id，用一个数字标志。
* gid：用户所在组的id，用一个数值标志。

## **相关文件结构**

* /etc/passwd文件结构
	
保存了系统中所有账号的信息，每一行都代表一个账号。账号的种类分为两个：`系统账号`和`用户账号`。其中系统账号是系统正常运行必须的。

{% highlight ruby %}
root:x:0:0:root:/root:/bin/bash
{% endhighlight %}

实例中的一行包括7列，用冒号“：”间隔分别说明：

    1. 账号名称 

    2. 账号密码，为了账号的安全性，账号的密码被保存在了/etc/shadow文件中，所以此处的密码变成了x

    3. UID

    4. GID

    5. 用户信息说明，无重要用途

    6. 主文件夹

    7. Shell用户登录系统后取得的默认的shell


* /etc/shadow文件结构

{% highlight ruby %}

root:$6$qE8d/k2K$NpCCL0kCsQdpAO5pC4QD91YAKpTS8w6.qdhl/fgZurM/2npI2bvEYY.LDNtll/Jnqlq1GH.AH3Z8hGiKJgIfy.:17111:0:99999:7:::

{% endhighlight %}

提前说明三个概念：

**密码过期**：指超过了密码必须被修改的截止时间依然没有修改密码。在此情况下，用户依然可以使用此账号，但是账号登录的时候，系统会强制要求用户必须重新设置密码才能继续使用。

**密码失效**：指的是密码过期超过了一定的天数，用户就无法使用此密码登录了。
 
**账号失效**：账号无法使用了

实例中的一行包括9列：

    1.账号名称

    2.账号密码，不过已经被加密过了。由于固定的编码系统产生的密码长度必须一致，所以这个字段的长度改变之后，密码就会失效

    3.最近更改密码的日期，这个时间是以1970年1月1日为1而累加得到的

    4.密码被修改后必须过几天才能再修改

    5.密码被更改后必须在多少天内再被修改

    6.在密码过期前的多少天之内提醒用户密码快到期了

    7.密码过期后的宽限时间，如果超过了这个时间，会发生密码失效

    8.账号在过了规定的日期就会无法使用，这个时间的设置同3

    9.保留字段

* **/etc/group文件结构**

{% highlight ruby %}
root:x:0:root
{% endhighlight %}
    
实例中的一行包括4列：

    1.用户组名字

    2.用户组密码，给用户组管理员使用

    3.GID

    4.用户组支持的用户
    
* **/etc/gshadow文件结构** 
{% highlight ruby %}
root:x:0:root
{% endhighlight %}
    
实例中的一行包括4列：
    
    1.用户组名字。
    
    2.密码列，同/etc/shadow。不过如果密码列上面是!的话，代表此用户组没有管理员。
    
    3.用户组管理员账号。
    
    4.用户组成员，成员之间用逗号分隔开

## **有效用户组和初始用户组**   

* 在/etc/passwd文件中，第四列就是用户的初始用户组组号GID，表示用户一登录系统就会取得该用户组的权限。而有效用户组是什么呢？当你登录shell，输入groups命令将会返回你所加入的所有用户组，其中第一个显示的用户组就是有效用户组。

* 当用户新建一个文件的时候，文件所属的用户组是创建者当前的有效用户组。
    
* newgrp命令可以切换当前用户的有效用户组，不过这个命令将会重新启动一个shell。

## **账号管理**

* useradd 添加一个用户
* passwd 修改用户的密码
* chage 修改密码的时间设置
* usermod 修改用户的信息
* finger 查看当前登录用户的详细信息
* chfn 修改个人信息
* id 查看用户的uid和gid
* groupadd 添加组
* groupmod 修改group的相关参数
* groupdel 删除用户组
* gpasswd 用户组管理员功能
	
